cd YuliethFiles/Documents/Repos/
mkdir
mkdir webpack-practice
cd webpack-practice
git init
npm -y
npm init -y
code .
npm install webpack-cli -D
npm webpack
npx webpack --mode development
npx webpack --mode production

-Create webpack.config.js file 

const path = require('path');

module.exports = {
    entry: './src/index.js',
    output: {
        path: path.resolve(__dirname, 'dist'),
        filename:'main.js'
    },
    resolve:{
        extensions: ['.js']
    }
}

-and run:

npx webpack --mode production --config webpack.config.js

-Add build in scripts:
"scripts": {
    
    "build": "webpack --mode production"


-Finally: 

npm run build

-NOW BABEL:

 npm install babel-loader @babel/core @babel/preset-env @babel/plugin-transform-runtime -D

 - Create file named: .babelrc

 {
    "presets":[
        "@babel/preset-env"
    ],
    "plugins": [
        "@babel/plugin-transform-runtime"
    ]
}


npm run build

- install html loader 

npm install html-webpack-plugin -D

- add to the configuration:
const HtmlWebPackPlugin = require('html-webpack-plugin');

plugins:[
        new HtmlWebPackPlugin({
            inject: true,
            template:'./public/index.html',
            filename: './index.html'
        })
    ]


- install css loader
npm install mini-css-extract-plugin css-loader -D

- add to the configuration:

const MiniCssExtractPlugin = require('mini-css-extract-plugin');


- new rule

            {
                test: /\.css$/i,
                use:[
                    MiniCssExtractPlugin.loader,
                    'css-loader'
                ],
            }

- new plugin

new MiniCssExtractPlugin(),